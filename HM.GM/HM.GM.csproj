<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <NoWin32Manifest>true</NoWin32Manifest>
    <StartupObject></StartupObject>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="6.2.2" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\src\app\GMDataLoader\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\src\app\GMDataLoader\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Remove="ClientApp\src\app\GMDataLoader\**" />
    <None Remove="ClientApp\src\app\GMDataLoader\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\e2e\app.e2e-spec.ts" />
    <None Remove="ClientApp\e2e\app.po.ts" />
    <None Remove="ClientApp\src\app\app.component.ts" />
    <None Remove="ClientApp\src\app\app.module.ts" />
    <None Remove="ClientApp\src\app\components\alert\alert.component.ts" />
    <None Remove="ClientApp\src\app\components\data-uploader\data-uploader.component.spec.ts" />
    <None Remove="ClientApp\src\app\components\data-uploader\data-uploader.component.ts" />
    <None Remove="ClientApp\src\app\components\gm-calculator-container\gm-calculator-container.component.spec.ts" />
    <None Remove="ClientApp\src\app\components\gm-calculator-container\gm-calculator-container.component.ts" />
    <None Remove="ClientApp\src\app\components\gm-calculator\gm-calculator.component.spec.ts" />
    <None Remove="ClientApp\src\app\components\gm-calculator\gm-calculator.component.ts" />
    <None Remove="ClientApp\src\app\components\gm-filter\gm-filter.pipe.spec.ts" />
    <None Remove="ClientApp\src\app\components\gm-filter\gm-filter.pipe.ts" />
    <None Remove="ClientApp\src\app\components\index.ts" />
    <None Remove="ClientApp\src\app\model\alert.ts" />
    <None Remove="ClientApp\src\app\model\GMCalculationParams.ts" />
    <None Remove="ClientApp\src\app\model\GMDefaultModel.ts" />
    <None Remove="ClientApp\src\app\model\GMInput.ts" />
    <None Remove="ClientApp\src\app\model\index.ts" />
    <None Remove="ClientApp\src\app\model\OrgMetaData.ts" />
    <None Remove="ClientApp\src\app\model\ResourceCostDetail.ts" />
    <None Remove="ClientApp\src\app\model\ResourceCostModel.ts" />
    <None Remove="ClientApp\src\app\components\nav-menu\nav-menu.component.ts" />
    <None Remove="ClientApp\src\app\Model\useraccess.ts" />
    <None Remove="ClientApp\src\app\services\alert.service.ts" />
    <None Remove="ClientApp\src\app\services\authentication.service.ts" />
    <None Remove="ClientApp\src\app\services\gm-calculator.service.ts" />
    <None Remove="ClientApp\src\app\services\index.ts" />
    <None Remove="ClientApp\src\app\services\pager.service.spec.ts" />
    <None Remove="ClientApp\src\app\services\pager.service.ts" />
    <None Remove="ClientApp\src\app\services\upload-data.service.ts" />
    <None Remove="ClientApp\src\app\services\winauth-interceptor.service.ts" />
    <None Remove="ClientApp\src\environments\environment.prod.ts" />
    <None Remove="ClientApp\src\environments\environment.ts" />
    <None Remove="ClientApp\src\main.ts" />
    <None Remove="ClientApp\src\polyfills.ts" />
    <None Remove="ClientApp\src\test.ts" />
    <None Remove="ClientApp\src\typings.d.ts" />
    <None Remove="ClientApp\tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\HM.GM.BAL\HM.GM.BAL.csproj" />
    <ProjectReference Include="..\HM.GM.DAL\HM.GM.DAL.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\e2e\app.e2e-spec.ts" />
    <TypeScriptCompile Include="ClientApp\e2e\app.po.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\data-uploader\data-uploader.component.spec.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\data-uploader\data-uploader.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\gm-calculator-container\gm-calculator-container.component.spec.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\gm-calculator-container\gm-calculator-container.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\gm-calculator\gm-calculator.component.spec.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\gm-calculator\gm-calculator.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\gm-filter\gm-filter.pipe.spec.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\gm-filter\gm-filter.pipe.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\Model\useraccess.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\alert.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\authentication.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\gm-calculator.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\app.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\app.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\alert\alert.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\model\Alert.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\model\GMCalculationParams.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\model\GMDefaultModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\model\GMInput.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\model\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\model\OrgMetaData.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\model\ResourceCostDetail.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\model\ResourceCostModel.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\nav-menu\nav-menu.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\pager.service.spec.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\pager.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\upload-data.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\winauth-interceptor.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\environments\environment.prod.ts" />
    <TypeScriptCompile Include="ClientApp\src\environments\environment.ts" />
    <TypeScriptCompile Include="ClientApp\src\main.ts" />
    <TypeScriptCompile Include="ClientApp\src\polyfills.ts" />
    <TypeScriptCompile Include="ClientApp\src\test.ts" />
    <TypeScriptCompile Include="ClientApp\src\typings.d.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
